---
title: "Final Rep"
author: "Sewheat Haile"
date: "4/1/2021"
output: pdf_document
---

```{r setup}

library(pacman)
p_load(tidyverse, stargazer, kableExtra, ipumsr, dplyr)

# load data via IPUMS instructions
ddi <- read_ipums_ddi("data/usa_00002.xml")
data <- read_ipums_micro(ddi)

str(data)
```

FROM XIYAN:
“We restrict estimation of the earnings equation to the economically active black and white population age 25 to 59, after eliminating the top and bottom earning percentiles from the analysis.”
I think they eliminated the top and bottom percentiles first. -Xiyan

FROM DI:
make sure to calculate the index of dissimilarity b/c they do that in the paper

```{r clean data-race}

# remove detailed hispanic and race columns as filtering can be done using the basic columns 
data_clean <- data %>%
  select(-HISPAND, -RACED)

# only include observations of non-hispanic
data_clean <- data_clean %>%
  filter(HISPAN == 0)

# only include observations of white and black
data_clean <- data_clean %>%
  filter(RACE %in% c(1, 2))
```


```{r clean data-occ1990}
# eliminate unknown occupations in OCC1990
data_clean <- data_clean %>%
  filter(OCC1990 < 999)

# load crosswalk to convert occ1990 to two-digit scheme
crosswalk <- read.csv("occ_crosswalk.csv")

# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
  rename(OCC1990 = occ1990) %>%
  rename(OCC_2DIGIT = occ_2digit) %>%
  rename(OCC1990_LABELS = occ1990_labels)

# join data frame by OCC1990 variable
data_clean <- left_join(data_clean, crosswalk)

# remove OCC1990 as it is no longer necessary
data_clean <- data_clean %>%
  select(-OCC1990)
```

```{r clean data-incwage}
# filter out economically inactive people and NAs
data_clean <- data_clean %>%
  filter(LABFORCE == 2)

# remove NA (999999) or Missing (999998) observations from INCWAGE
data_clean <- data_clean %>%
  filter(INCWAGE < 999998)

# adjust wages for inflation -> set to 1999 dollars
# (2000 census already set to 1999 dollars)
data_clean <- data_clean %>%
    mutate(
    INCWAGE_ADJ = ifelse(YEAR == 1980,       # if `year` equals 1980,
                    INCWAGE*2.295,           # then `incwage_adj` equals incwage*2.295,
                    INCWAGE)) %>%            # else `incwage_adj` equals 'incwage'
    mutate(
    INCWAGE_ADJ = ifelse(YEAR == 1990,       # if `year` equals 1990,
                    INCWAGE*1.344,           # then `incwage_adj` equals incwage*1.344,
                    INCWAGE_ADJ)) %>%        # else `incwage_adj` stays the same
    mutate(
    INCWAGE_ADJ = ifelse(YEAR == 2010,       # if `year` equals 2010,
                    INCWAGE*0.777,           # then `incwage_adj` equals incwage*0.777,
                    INCWAGE_ADJ))            # else `incwage_adj` stays the same

# remove observations of 0 from INCWAGE in order to remove top and bottom percentiles
data_clean <- data_clean %>%
  filter(INCWAGE_ADJ > 0)

# group by year, then filter out top and bottom 1% for each year
data_clean <- data_clean %>%
  group_by(YEAR) %>%
  filter(quantile(INCWAGE_ADJ, 0.99) > INCWAGE_ADJ) %>%
  filter(quantile(INCWAGE_ADJ, 0.01) < INCWAGE_ADJ)

# remove INCWAGE as it is no longer necessary (so i don't confuse myself)
data_clean <- data_clean %>%
  select(-INCWAGE)

# restrict age to 25 - 59
data_clean <- data_clean %>%
  filter(AGE >= 25) %>%
  filter(AGE <= 59)

# 1. create new variable of weekly wage by dividing annual wages by weeks worked
# 2. create new variable of log weekly wages
# 3. create new variable of log working hours
data_clean <- data_clean %>%
  mutate(WKWAGE = INCWAGE_ADJ / WKSWORK2) %>%
  mutate(WKWAGE_LOG = log(WKWAGE)) %>%
  mutate(UHRSWORK_LOG = log(UHRSWORK))
```

```{r clean data-educ}
# check the occurrences of NA + no schooling, NA, and no schooling in EDUCD variable
nrow(data_clean[data_clean$EDUCD==000,])         # NA + no schooling
nrow(data_clean[data_clean$EDUCD==001,])         # NA
nrow(data_clean[data_clean$EDUCD==002,])         # no schooling

# all NAs are already eliminated, only "no schooling" remains

# make sure "NA + no schooling" observations in EDUC matches "no schooling" observations in EDUCD
nrow(data_clean[data_clean$EDUC==00,]) 

# they match

# create binary categories for educational attainment
# college grad is the omitted category
##### this is correct???? i think yes
data_clean <- data_clean %>%
    mutate(
    LESSHS = ifelse(EDUC < 06,       # if `EDUC` is less than 06 (grade 12),
                    1,               # then `LESSHS` equals 1,
                    0)) %>%         # else `LESSHS` equals 0
 
    mutate(
    HSGRAD = ifelse(EDUC == 06,       # if `EDUC` equals 06 (grade 12),
                    1,               # then `HSGRAD` equals 1,
                    0)) %>%         # else `HSGRAD` equals 0

    mutate(
    SOMECOL = ifelse(EDUC > 06 & EDUC < 10, # if `EDUC` is > 06 (grade 12) and < 10 (4 year col),
                    1,                       # then `SOMECOL` equals 1,
                    0))                  # else `SOMECOL` equals 0

# filter out below grade 1 and unspecified years of schooling (ex "Grade 7 or 8", "Bachelor's degree")
# create vector of values to filter out
####### filter out 110 because its 5+ years of schooling????? or keep it? its filtered now.
####### same as above but for 113 (8+ years)
years_filtered <- c(000, 001, 010, 011, 012, 013, 020, 021, 024, 062, 063, 064, 065, 071, 081, 082, 083, 101, 110, 113, 114, 115, 116, 999)

# pipe the filtering function
test_yrssch <- data_clean %>%
  filter(!(EDUCD %in% years_filtered))

head(test_yrssch, 20)

# create new variable for years of schooling (calculated directly)
# create new crosswalk for years of schooling
EDUCD <- c(014, 015, 016, 017, 022, 023, 025, 026, 030, 040, 050, 060, 061, 070, 080, 090, 100, 111, 112)

YRSSCH <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 13, 14, 15, 16, 18, 19)

crosswalk_yrssch <- cbind.data.frame(EDUCD, YRSSCH)
crosswalk_yrssch


# crosswalk
test_yrssch <- left_join(test_yrssch, crosswalk_yrssch)
head(test_yrssch, 20)


# create new variable "potential work experience" (age - years schooling - 6), and its square
test_yrssch <- test_yrssch %>%
  mutate(POTWORK = (AGE - YRSSCH - 6)) %>%
  mutate(POTWORK_SQ = POTWORK^2)

head(test_yrssch, 20)

test_1990 <- test_yrssch %>% filter(YEAR==1990)
head(test_1990)

# approx equal to  male pop
nrow(test_1990)

nrow(data_clean %>% filter(YEAR==1990))

# why is nrow for 1990 so small......

nrow(test_yrssch %>% filter(SEX==1 & YEAR==2010))

# i filtered out too much ........

```

```{r clean data-marriage and children}
# create new binary variable MARST_ADJ for maritial status where 1 = married
data_clean <- data_clean %>%
    mutate(
    MARST_ADJ = ifelse(MARST==1 | MARST==2,       # if `EDUC` is less than 06 (grade 12),
                    1,                          # then `LESSHS` equals 1,
                    0))

# remove original MARST so i don't confuse myself
data_clean <- data_clean %>%
  select(-MARST)

# create new binary variable NCHLT5_ADJ for presence of children where 1 = child present
data_clean <- data_clean %>%
    mutate(
    NCHLT5_ADJ = ifelse(NCHLT5==0,       # if `NCHLT5` equals 0,
                    0,                  # then `NCHLT5_ADJ` equals 0,
                    1))                 # else `NCHLT5_ADJ` equals 1

# remove original NCHLT5 so i don't confuse myself
data_clean <- data_clean %>%
  select(-NCHLT5)
```

```{r clean data-birthplace and region}
# remove missing/blank birthplace observations
data_clean <- data_clean %>%
  filter(BPL < 999)

# create binary variable for foreign born
data_clean <- data_clean %>%
    mutate(
    BPL_ADJ = ifelse(BPL > 099,       # if `BPL` is greater than 099,
                    0,                  # then `BPL` equals 0,
                    1))                 # else `BPL` equals 1

# remove original birthplace variables so i don't confuse myself
data_clean <- data_clean %>%
  select(-BPL, -BPLD)

# filter out unidentified states for region variable
data_clean <- data_clean %>%
  filter(REGION < 97)

# create binary variables for region
# Northeast is the omitted category
data_clean <- data_clean %>%
    mutate(
    MIDWST = ifelse(REGION > 13 & REGION < 31,       # if `REGION` is > 13 and < 31,
                    1,                               # then `MIDWST` equals 1,
                    0)) %>%                          # else `MIDWST` equals 0
 
    mutate(
    SOUTH = ifelse(REGION > 23 & REGION < 41,       # if `REGION` is > 23 and < 41,
                    1,                              # then `SOUTH` equals 1,
                    0)) %>%                         # else `SOUTH` equals 0

    mutate(
    WEST = ifelse(REGION > 34 & REGION < 91,     # if `REGION` is > 34 and < 91,
                    1,                               # then `WEST` equals 1,
                    0))                              # else `WEST` equals 0

head(data_clean[data_clean$MIDWST==1,], 20)
```

```{r clean data-sector and metro area}
# filter out NA observations for sector
data_clean <- data_clean %>%
  filter(CLASSWKRD > 00)

# check for observations of "unpaid family worker"
###### do i remove observations of "unpaid family worker"??? no because that was already taken care of w/ the economically active variable?
nrow(data_clean[data_clean$CLASSWKRD==29,])

# create binary variable for public sector workers (=1)
data_clean <- data_clean %>%
    mutate(
    PUBLIC_SEC = ifelse(CLASSWKRD > 23 & CLASSWKRD < 29,       # if `CLASSWKRD` is > 23 and < 29,
                    1,                                         # then `PUBLIC_SEC` equals 1,
                    0))                                        # else `PUBLIC_SEC` equals 0

# filter out indeterminable (mixed) metro area observations
data_clean <- data_clean %>%
  filter(METRO > 0)

# create binary variable for presence in metropolitan area (=1)
data_clean <- data_clean %>%
    mutate(
    METRO_ADJ = ifelse(METRO > 1,       # if `METRO` is > 1,
                    1,                  # then `METRO_ADJ` equals 1,
                    0))                 # else `METRO_ADJ` equals 0

# remove original metro variable so i don't confuse myself
data_clean <- data_clean %>%
  select(-METRO)

nrow(data_clean %>% filter(SEX == 1 & YEAR==2010))
```