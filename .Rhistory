library(pacman)
p_load(tidyverse, stargazer, kableExtra, ipumsr, dplyr)
head(data_clean[data_clean$YEAR==1990,],10)
head(data_clean$INCWAGE[data_clean$YEAR==1990,],10)
head(data_clean[data_clean$YEAR==1990,],10)
head(data_clean[data_clean$YEAR==1980,],10)
head(data_clean[data_clean$YEAR==1980,],10)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,     # if `year` equals 1980,
INCWAGE*2.295,        # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%          # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,     # if `year` equals 1990,
INCWAGE*1.344,        # then `incwage_adj` equals incwage*1.344,
INCWAGE)) %>%          # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,     # if `year` equals 1980,
INCWAGE*0.777,        # then `incwage_adj` equals incwage*2.295,
INCWAGE))          # else `incwage_adj` equals 'incwage'
head(data_clean[data_clean$YEAR==1980,],10)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,     # if `year` equals 1980,
INCWAGE*2.295,        # then `incwage_adj` equals incwage*2.295,
INCWAGE))            # else `incwage_adj` equals 'incwage'
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,     # if `year` equals 1990,
INCWAGE*1.344,        # then `incwage_adj` equals incwage*1.344,
INCWAGE))            # else `incwage_adj` equals 'incwage'
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,     # if `year` equals 1980,
INCWAGE*0.777,        # then `incwage_adj` equals incwage*2.295,
INCWAGE))            # else `incwage_adj` equals 'incwage'
head(data_clean[data_clean$YEAR==1980,],10)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,     # if `year` equals 1980,
INCWAGE*2.295,        # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%           # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,     # if `year` equals 1990,
INCWAGE*1.344,        # then `incwage_adj` equals incwage*1.344,
INCWAGE_ADJ)) %>%           # else `incwage_adj` stays the same
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,     # if `year` equals 1980,
INCWAGE*0.777,        # then `incwage_adj` equals incwage*2.295,
INCWAGE_ADJ))            # else `incwage_adj` stays the same
head(data_clean[data_clean$YEAR==1980,],10)
head(data_clean[data_clean$YEAR==1990,],10)
head(data_clean[data_clean$YEAR==2000,],10)
head(data_clean[data_clean$YEAR==2010,],10)
# remove INCWAGE as it is no longer necessary
data_clean <- data_clean %>%
select(-INCWAGE)
head(data_clean, 10)
# remove OCC1990 as it is no longer necessary
data_clean <- data_clean %>%
select(-OCC1990)
head(data_clean, 10)
data_clean <- data_clean %>%
mutate(WKWAGE = INCWAGE_ADJ / WKSWORK2) %>%
mutate(WKWAGE_LOG = log(WKWAGE)) %>%
mutate(UHRSWORK_LOG = log(UHRSWORK))
head(data_clean, 10)
head(data_clean, 10)
quantile(data_clean, c(.1, .99))
summary(data$INCWAGE)
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
# only include observations of non-hispanic
data_clean <- data_clean %>%
filter(HISPAN == 0)
# only include observations of white and black
data_clean <- data_clean %>%
filter(RACE %in% c(1, 2))
# load crosswalk to convert occ1990 to two-digit scheme
crosswalk <- read.csv("occ_crosswalk.csv")
# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990) %>%
rename(OCC_2DIGIT = occ_2digit) %>%
rename(OCC1990_LABELS = occ1990_labels)
# join data frame by OCC1990 variable
data_clean <- left_join(data_clean, crosswalk)
# remove OCC1990 as it is no longer necessary
data_clean <- data_clean %>%
select(-OCC1990)
data_clean <- data_clean %>%
filter(INCWAGE < 999998)
# eliminate top and bottom earning percentiles
######### i do this first right???
quantile(data_clean$INCWAGE, c(.1, .99))
# adjust wages for inflation -> set to 1999 dollars
# (2000 census already set to 1999 dollars)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,       # if `year` equals 1980,
INCWAGE*2.295,           # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%            # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,       # if `year` equals 1990,
INCWAGE*1.344,           # then `incwage_adj` equals incwage*1.344,
INCWAGE_ADJ)) %>%        # else `incwage_adj` stays the same
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,       # if `year` equals 2010,
INCWAGE*0.777,           # then `incwage_adj` equals incwage*0.777,
INCWAGE_ADJ))            # else `incwage_adj` stays the same
# eliminate top and bottom earning percentiles
######### is this the right place for this step???
quantile(data_clean$INCWAGE, c(.1, .99))
# eliminate top and bottom earning percentiles
######### is this the right place for this step???
quantile(data_clean$INCWAGE, c(.01, .99))
# eliminate top and bottom earning percentiles
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
quantile(data_clean$INCWAGE_ADJ, c(.05, .99))
quantile(data_clean$INCWAGE_ADJ, c(.2, .99))
quantile(data_clean$INCWAGE_ADJ, c(.3, .99))
quantile(data_clean$INCWAGE_ADJ, c(.4, .99))
# eliminate top and bottom earning percentiles
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
# eliminate top and bottom earning percentiles
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0 && INCWAGE_ADJ < 121000)
# determine top and bottom 1% of earnings after adjusting for inflation
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
# only include observations of non-hispanic
data_clean <- data_clean %>%
filter(HISPAN == 0)
# only include observations of white and black
data_clean <- data_clean %>%
filter(RACE %in% c(1, 2))
# eliminate unknown occupations in OCC1990
data_clean <- data_clean %>%
filter(OCC1990 < 999)
# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990) %>%
rename(OCC_2DIGIT = occ_2digit) %>%
rename(OCC1990_LABELS = occ1990_labels)
# load crosswalk to convert occ1990 to two-digit scheme
crosswalk <- read.csv("occ_crosswalk.csv")
# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990) %>%
rename(OCC_2DIGIT = occ_2digit) %>%
rename(OCC1990_LABELS = occ1990_labels)
# join data frame by OCC1990 variable
data_clean <- left_join(data_clean, crosswalk)
# remove OCC1990 as it is no longer necessary
data_clean <- data_clean %>%
select(-OCC1990)
# remove NA (999999) or Missing (999998) observations from INCWAGE
######### i do this first right???
data_clean <- data_clean %>%
filter(INCWAGE < 999998)
# adjust wages for inflation -> set to 1999 dollars
# (2000 census already set to 1999 dollars)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,       # if `year` equals 1980,
INCWAGE*2.295,           # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%            # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,       # if `year` equals 1990,
INCWAGE*1.344,           # then `incwage_adj` equals incwage*1.344,
INCWAGE_ADJ)) %>%        # else `incwage_adj` stays the same
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,       # if `year` equals 2010,
INCWAGE*0.777,           # then `incwage_adj` equals incwage*0.777,
INCWAGE_ADJ))            # else `incwage_adj` stays the same
# determine top and bottom 1% of earnings after adjusting for inflation
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
# eliminate top and bottom earning percentiles
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0 && INCWAGE_ADJ < 121000)
# remove INCWAGE as it is no longer necessary
data_clean <- data_clean %>%
select(-INCWAGE)
###### choose only economically active people, restrict age to 25 - 59
data_clean <- data_clean %>%
filter(LABFORCE == 2)
# restrict age to 25 - 59
data_clean <- data_clean %>%
filter(AGE >= 25 && INCWAGE_ADJ <= 59)
head(data_clean)
head(data_clean, 10)
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
# only include observations of non-hispanic
data_clean <- data_clean %>%
filter(HISPAN == 0)
# only include observations of white and black
data_clean <- data_clean %>%
filter(RACE %in% c(1, 2))
# eliminate unknown occupations in OCC1990
data_clean <- data_clean %>%
filter(OCC1990 < 999)
# load crosswalk to convert occ1990 to two-digit scheme
crosswalk <- read.csv("occ_crosswalk.csv")
# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990) %>%
rename(OCC_2DIGIT = occ_2digit) %>%
rename(OCC1990_LABELS = occ1990_labels)
# join data frame by OCC1990 variable
data_clean <- left_join(data_clean, crosswalk)
# remove OCC1990 as it is no longer necessary
data_clean <- data_clean %>%
select(-OCC1990)
# remove NA (999999) or Missing (999998) observations from INCWAGE
######### i do this first right???
data_clean <- data_clean %>%
filter(INCWAGE < 999998)
# adjust wages for inflation -> set to 1999 dollars
# (2000 census already set to 1999 dollars)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,       # if `year` equals 1980,
INCWAGE*2.295,           # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%            # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,       # if `year` equals 1990,
INCWAGE*1.344,           # then `incwage_adj` equals incwage*1.344,
INCWAGE_ADJ)) %>%        # else `incwage_adj` stays the same
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,       # if `year` equals 2010,
INCWAGE*0.777,           # then `incwage_adj` equals incwage*0.777,
INCWAGE_ADJ))            # else `incwage_adj` stays the same
# determine top and bottom 1% of earnings (after adjusting for inflation)
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
# eliminate top and bottom earning percentiles (after adjusting for inflation)
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0 && INCWAGE_ADJ < 121000)
head(data_clean, 10)
summary(data_clean$INCWAGE_ADJ)
# eliminate top and bottom earning percentiles (after adjusting for inflation)
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0 && INCWAGE_ADJ < 121000)
summary(data_clean$INCWAGE_ADJ)
# eliminate top and bottom earning percentiles (after adjusting for inflation)
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0) %>%
filter(INCWAGE_ADJ < 121000)
summary(data_clean$INCWAGE_ADJ)
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
# only include observations of non-hispanic
data_clean <- data_clean %>%
filter(HISPAN == 0)
# only include observations of white and black
data_clean <- data_clean %>%
filter(RACE %in% c(1, 2))
# eliminate unknown occupations in OCC1990
data_clean <- data_clean %>%
filter(OCC1990 < 999)
# load crosswalk to convert occ1990 to two-digit scheme
crosswalk <- read.csv("occ_crosswalk.csv")
# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990) %>%
rename(OCC_2DIGIT = occ_2digit) %>%
rename(OCC1990_LABELS = occ1990_labels)
# join data frame by OCC1990 variable
data_clean <- left_join(data_clean, crosswalk)
# remove OCC1990 as it is no longer necessary
data_clean <- data_clean %>%
select(-OCC1990)
# filter out economically inactive people and NAs
####### is this the right spot for this??
data_clean <- data_clean %>%
filter(LABFORCE == 2)
# remove NA (999999) or Missing (999998) observations from INCWAGE
######### i do this first right???
data_clean <- data_clean %>%
filter(INCWAGE < 999998)
# adjust wages for inflation -> set to 1999 dollars
# (2000 census already set to 1999 dollars)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,       # if `year` equals 1980,
INCWAGE*2.295,           # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%            # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,       # if `year` equals 1990,
INCWAGE*1.344,           # then `incwage_adj` equals incwage*1.344,
INCWAGE_ADJ)) %>%        # else `incwage_adj` stays the same
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,       # if `year` equals 2010,
INCWAGE*0.777,           # then `incwage_adj` equals incwage*0.777,
INCWAGE_ADJ))            # else `incwage_adj` stays the same
# determine top and bottom 1% of earnings (after adjusting for inflation)
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
# eliminate top and bottom earning percentiles (after adjusting for inflation)
#### is this correct????
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0) %>%
filter(INCWAGE_ADJ < 150000)
summary(data_clean$INCWAGE_ADJ)
# determine top and bottom 1% of earnings (after adjusting for inflation)
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.02, .99))
# eliminate top and bottom earning percentiles (after adjusting for inflation)
#### is this correct????
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0) %>%
filter(INCWAGE_ADJ < 150000)
######### remove INCWAGE as it is no longer necessary (????? so i don't confuse myself)
data_clean <- data_clean %>%
select(-INCWAGE)
# restrict age to 25 - 59
data_clean <- data_clean %>%
filter(AGE >= 25) %>%
filter(AGE <= 59)
summary(data_clean$AGE)
head(data_clean, 10)
# 1. create new variable of weekly wage by dividing annual wages by weeks worked
# 2. create new variable of log weekly wages
# 3. create new variable of log working hours
data_clean <- data_clean %>%
mutate(WKWAGE = INCWAGE_ADJ / WKSWORK2) %>%
mutate(WKWAGE_LOG = log(WKWAGE)) %>%
mutate(UHRSWORK_LOG = log(UHRSWORK))
str(data_clean)
library(pacman)
p_load(tidyverse, stargazer, kableExtra, ipumsr, dplyr)
# load data via IPUMS instructions
ddi <- read_ipums_ddi("data/usa_00002.xml")
data <- read_ipums_micro(ddi)
str(data)
str(data_clean)
head(data_clean)
sum(with(data_clean, EDUC==000))
sum(with(data_clean, EDUCD==000))
sum(with(data_clean, EDUCD==001)) + sum(with(data_clean, EDUCD==002))
sum(with(data_clean, EDUCD==000))
sum(with(data_clean, EDUCD==0))
sum(with(data_clean, EDUCD==001))
sum(with(data_clean, EDUCD==002))
sum(with(data_clean, EDUCD==0))
sum(with(data_clean, EDUCD==001))
sum(with(data_clean, EDUCD==0))
sum(with(data_clean, EDUCD==001))
sum(with(data_clean, EDUCD==002))
nrow(data_clean[data_clean$EDUCD==000,])
nrow(data_clean[data_clean$EDUCD==000,])
nrow(data_clean[data_clean$EDUCD==000,])
nrow(data_clean[data_clean$EDUCD==001,])
nrow(data_clean[data_clean$EDUCD==002,])
nrow(data_clean[data_clean$EDUCD==000,])
nrow(data_clean[data_clean$EDUCD==001,])
nrow(data_clean[data_clean$EDUCD==002,])
# make sure NA + no schooling observations match in both EDUCD and EDUC
nrow(data_clean[data_clean$EDUC==00,])
# check the occurrences of NA + no schooling, NA, and no schooling in EDUCD variable
nrow(data_clean[data_clean$EDUCD==000,])         # NA + no schooling
# make sure NA + no schooling observations match in both EDUCD and EDUC
nrow(data_clean[data_clean$EDUC==00,])
# check the occurrences of NA + no schooling, NA, and no schooling in EDUCD variable
nrow(data_clean[data_clean$EDUCD==000,])         # NA + no schooling
nrow(data_clean[data_clean$EDUCD==001,])         # NA
nrow(data_clean[data_clean$EDUCD==002,])         # no schooling
# all NAs are already eliminated, only "no schooling" remains
# make sure NA + no schooling observations match in both EDUCD and EDUC
nrow(data_clean[data_clean$EDUC==00,])
data_clean <- data_clean %>%
mutate(
LESSHS = ifelse(EDUC < 06,       # if `EDUC` is less than 06 (grade 12),
1,               # then `LESSHS` equals 1,
0)) %>%         # else `LESSHS` equals 0
mutate(
HSGRAD = ifelse(EDUC == 06,       # if `EDUC` equals 06 (grade 12),
1,               # then `HSGRAD` equals 1,
0)) %>%         # else `HSGRAD` equals 0
mutate(
SOMECOL = ifelse(EDUC > 06 && EDUC < 10, # if `EDUC` is > 06 (grade 12) and < 10 (4 year col),
1,                       # then `SOMECOL` equals 1,
0)) %>%                  # else `SOMECOL` equals 0
mutate(
COLGRAD = ifelse(EDUC > 09,        # if `EDUC` is > 09 (3 year col),
1,                       # then `COLGRAD` equals 1,
0))                 # else `COLGRAD` equals 0
head(data_clean)
head(data_clean, 10)
head(data_clean[data_clean$LESSHS==1,], 20)
head(data_clean[data_clean$HSGRAD==1,], 20)
head(data_clean[data_clean$SOMECOL==1,], 20)
head(data_clean[data_clean$SOMECOL==1,], 20)
nrow(data_clean[data_clean$EDUC==07,])
data_clean <- data_clean %>%
mutate(
LESSHS = ifelse(EDUC < 06,       # if `EDUC` is less than 06 (grade 12),
1,               # then `LESSHS` equals 1,
0)) %>%         # else `LESSHS` equals 0
mutate(
HSGRAD = ifelse(EDUC == 06,       # if `EDUC` equals 06 (grade 12),
1,               # then `HSGRAD` equals 1,
0)) %>%         # else `HSGRAD` equals 0
mutate(
SOMECOL = ifelse(EDUC == c(07, 08, 09), # if `EDUC` is > 06 (grade 12) and < 10 (4 year col),
1,                       # then `SOMECOL` equals 1,
0)) %>%                  # else `SOMECOL` equals 0
mutate(
COLGRAD = ifelse(EDUC > 09,        # if `EDUC` is > 09 (3 year col),
1,                       # then `COLGRAD` equals 1,
0))                 # else `COLGRAD` equals 0
SOMECOL = ifelse(EDUC > 06 & EDUC < 10, # if `EDUC` is > 06 (grade 12) and < 10 (4 year col),
1,                       # then `SOMECOL` equals 1,
0)) %>%                  # else `SOMECOL` equals 0
# create binary categories for educational attainment
data_clean <- data_clean %>%
mutate(
LESSHS = ifelse(EDUC < 06,       # if `EDUC` is less than 06 (grade 12),
1,               # then `LESSHS` equals 1,
0)) %>%         # else `LESSHS` equals 0
mutate(
HSGRAD = ifelse(EDUC == 06,       # if `EDUC` equals 06 (grade 12),
1,               # then `HSGRAD` equals 1,
0)) %>%         # else `HSGRAD` equals 0
mutate(
SOMECOL = ifelse(EDUC > 06 & EDUC < 10, # if `EDUC` is > 06 (grade 12) and < 10 (4 year col),
1,                       # then `SOMECOL` equals 1,
0)) %>%                  # else `SOMECOL` equals 0
mutate(
COLGRAD = ifelse(EDUC > 09,        # if `EDUC` is > 09 (3 year col),
1,                       # then `COLGRAD` equals 1,
0))                 # else `COLGRAD` equals 0
head(data_clean[data_clean$SOMECOL==1,], 20)
head(data_clean[data_clean$LESSHS==1,], 20)
head(data_clean[data_clean$HSGRAD==1,], 20)
head(data_clean[data_clean$SOMECOL==1,], 20)
filter(data_clean, LESSHS == 0 && HSGRAD == 0 && SOMECOL == 0)
filter(data_clean, LESSHS == 0 && HSGRAD == 0 && SOMECOL == 0)
filter(data_clean, LESSHS == 0 & HSGRAD == 0 & SOMECOL == 0)
data_clean <- data_clean %>%
select(-COLGRAD)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(tidyverse, stargazer, kableExtra, gridExtra, effects, gmodels, MASS, nnet)
# Load data
load("data/support_level_df.RData")
# Check data
head(support_df, 10) %>% kbl("html") %>% kable_classic_2(full_width = F)
# Create variables for contingency tables
support_df <- support_df %>%
mutate(# Covert dummies to categorical variables
gender = ifelse(female == 0, "male", "female"),
race = ifelse(black == 1, "black", "white"))
# Simple contingency table and chi-square test for support levels and race
t1 <- table(support_df$support_level, support_df$race)
t1
chisq.test(t1)
f_exp <- 1000 / 2*3
f_exp
f_exp <- 1000 / (2*3)
f_exp
f_exp*6
f_1 <- (105-123.228)^2 / 123.228
f_2 <- (109-114.915)^2 / 114.915
f_3 <- (275-250.857)^2 / 250.857
m_1 <- (147-128.772)^2 / 128.772
m_2 <- (126-120.085)^2 / 120.085
m_3 <- (238-262.143)^2 / 262.143
chi_sq_hand <- f_1 + f_2 + f_3 + m_1 + m_2 + m_3
chi_sq_hand
pchisq(chi_sq_hand, (3-1)*(2-1), lower.tail = F)
data_clean %>%
lm(INCWAGE_ADJ ~ LESSHS + HSGRAD + SOMECOL)
lm(INCWAGE_ADJ ~ LESSHS + HSGRAD + SOMECOL, data = data_clean)
summary(lm(INCWAGE_ADJ ~ LESSHS + HSGRAD + SOMECOL, data = data_clean))
# determine top and bottom 1% of earnings (after adjusting for inflation)
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
library(pacman)
p_load(tidyverse, stargazer, kableExtra, ipumsr, dplyr)
# load data via IPUMS instructions
ddi <- read_ipums_ddi("data/usa_00002.xml")
data <- read_ipums_micro(ddi)
str(data)
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
# only include observations of non-hispanic
data_clean <- data_clean %>%
filter(HISPAN == 0)
# only include observations of white and black
data_clean <- data_clean %>%
filter(RACE %in% c(1, 2))
# eliminate unknown occupations in OCC1990
data_clean <- data_clean %>%
filter(OCC1990 < 999)
str(data)
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
