# adjust wages for inflation -> set to 1999 dollars
# (2000 census already set to 1999 dollars)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,       # if `year` equals 1980,
INCWAGE*2.295,           # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%            # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,       # if `year` equals 1990,
INCWAGE*1.344,           # then `incwage_adj` equals incwage*1.344,
INCWAGE_ADJ)) %>%        # else `incwage_adj` stays the same
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,       # if `year` equals 2010,
INCWAGE*0.777,           # then `incwage_adj` equals incwage*0.777,
INCWAGE_ADJ))            # else `incwage_adj` stays the same
# remove observations of 0 from INCWAGE in order to remove top and bottom percentiles
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0)
# group by year, then filter out top and bottom 1% for each year
data_clean <- data_clean %>%
group_by(YEAR) %>%
filter(quantile(INCWAGE_ADJ, 0.99) > INCWAGE_ADJ) %>%
filter(quantile(INCWAGE_ADJ, 0.01) < INCWAGE_ADJ)
# remove INCWAGE as it is no longer necessary (so i don't confuse myself)
data_clean <- data_clean %>%
select(-INCWAGE)
# restrict age to 25 - 59
data_clean <- data_clean %>%
filter(AGE >= 25) %>%
filter(AGE <= 59)
# 1. create new variable of weekly wage by dividing annual wages by weeks worked
# 2. create new variable of log weekly wages
# 3. create new variable of log working hours
data_clean <- data_clean %>%
mutate(WKWAGE = INCWAGE_ADJ / WKSWORK2) %>%
mutate(WKWAGE_LOG = log(WKWAGE)) %>%
mutate(UHRSWORK_LOG = log(UHRSWORK))
# check the occurrences of NA + no schooling, NA, and no schooling in EDUCD variable
nrow(data_clean[data_clean$EDUCD==000,])         # NA + no schooling
nrow(data_clean[data_clean$EDUCD==001,])         # NA
nrow(data_clean[data_clean$EDUCD==002,])         # no schooling
# all NAs are already eliminated, only "no schooling" remains
# make sure "NA + no schooling" observations in EDUC matches "no schooling" observations in EDUCD
nrow(data_clean[data_clean$EDUC==00,])
# create binary categories for educational attainment
# college grad is the omitted category
##### this is correct???? i think yes
data_clean <- data_clean %>%
mutate(
LESSHS = ifelse(EDUC < 06,       # if `EDUC` is less than 06 (grade 12),
1,               # then `LESSHS` equals 1,
0)) %>%         # else `LESSHS` equals 0
mutate(
HSGRAD = ifelse(EDUC == 06,       # if `EDUC` equals 06 (grade 12),
1,               # then `HSGRAD` equals 1,
0)) %>%         # else `HSGRAD` equals 0
mutate(
SOMECOL = ifelse(EDUC > 06 & EDUC < 10, # if `EDUC` is > 06 (grade 12) and < 10 (4 year col),
1,                       # then `SOMECOL` equals 1,
0))                  # else `SOMECOL` equals 0
# filter out below grade 1 and unspecified years of schooling (ex "Grade 7 or 8", "Bachelor's degree")
# create vector of values to filter out
####### filter out 110 because its 5+ years of schooling????? or keep it? its filtered now.
####### same as above but for 113 (8+ years)
years_filtered <- c(000, 001, 010, 011, 012, 013, 020, 021, 024, 062, 063, 064, 065, 071, 081, 082, 083, 101, 110, 113, 114, 115, 116, 999)
# pipe the filtering function
test_yrssch <- data_clean %>%
filter(!(EDUCD %in% years_filtered))
head(test_yrssch, 20)
# create new variable for years of schooling (calculated directly)
# create new crosswalk for years of schooling
EDUCD <- c(014, 015, 016, 017, 022, 023, 025, 026, 030, 040, 050, 060, 061, 070, 080, 090, 100, 111, 112)
YRSSCH <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 13, 14, 15, 16, 18, 19)
crosswalk_yrssch <- cbind.data.frame(EDUCD, YRSSCH)
crosswalk_yrssch
# crosswalk
test_yrssch <- left_join(test_yrssch, crosswalk_yrssch)
head(test_yrssch, 20)
# create new variable "potential work experience" (age - years schooling - 6), and its square
test_yrssch <- test_yrssch %>%
mutate(POTWORK = (AGE - YRSSCH - 6)) %>%
mutate(POTWORK_SQ = POTWORK^2)
head(test_yrssch, 20)
test_1990 <- test_yrssch %>% filter(YEAR==1990)
head(test_1990)
# approx equal to  male pop
nrow(test_1990)
nrow(data_clean %>% filter(YEAR==1990))
# why is nrow for 1990 so small......
nrow(test_yrssch %>% filter(SEX==1 & YEAR==2010))
# i filtered out too much ........
data_clean <- data_clean %>%
mutate(
MARST_ADJ = ifelse(MARST==1 | MARST==2,       # if `EDUC` is less than 06 (grade 12),
1,                          # then `LESSHS` equals 1,
0))
head(data_clean, 20)
head(data_clean[data_clean$MARST==2,], 20)
# remove original MARST so i don't confuse myself
data_clean <- data_clean %>%
select(-MARST)
# create new binary variable NCHLT5_ADJ for presence of children where 1 = child present
data_clean <- data_clean %>%
mutate(
NCHLT5_ADJ = ifelse(NCHLT5==0,       # if `NCHLT5` equals 0,
0,                  # then `NCHLT5_ADJ` equals 0,
1))                 # else `NCHLT5_ADJ` equals 1
# remove original NCHLT5 so i don't confuse myself
data_clean <- data_clean %>%
select(-NCHLT5)
# remove missing/blank birthplace observations
data_clean <- data_clean %>%
filter(BPL < 999)
# create binary variable for foreign born
data_clean <- data_clean %>%
mutate(
BPL_ADJ = ifelse(BPL > 099,       # if `BPL` is greater than 099,
0,                  # then `BPL` equals 0,
1))                 # else `BPL` equals 1
head(data_clean, 20)
head(data_clean[data_clean$BPL_ADJ==0], 20)
head(data_clean[data_clean$BPL_ADJ==0,], 20)
summary(data_clean$BPL_ADJ)
frequency(data_clean$BPL_ADJ)
# remove original birthplace variables so i don't confuse myself
data_clean <- data_clean %>%
select(-BPL, -BPLD)
# filter out unidentified states for region variable
data_clean <- data_clean %>%
filter(REGION < 97)
SOUTH = ifelse(REGION > 23 & REGION < 41,       # if `REGION` is > 23 and < 41,
1,                              # then `SOUTH` equals 1,
0)) %>%                         # else `SOUTH` equals 0
# create binary variables for region
# Northeast is the omitted category
data_clean <- data_clean %>%
mutate(
MIDWST = ifelse(REGION > 13 & REGION < 31,       # if `REGION` is > 13 and < 31,
1,                               # then `MIDWST` equals 1,
0)) %>%                          # else `MIDWST` equals 0
mutate(
SOUTH = ifelse(REGION > 23 & REGION < 41,       # if `REGION` is > 23 and < 41,
1,                              # then `SOUTH` equals 1,
0)) %>%                         # else `SOUTH` equals 0
mutate(
WEST = ifelse(REGION > 34 & REGION < 91,     # if `REGION` is > 34 and < 91,
1,                               # then `WEST` equals 1,
0))                              # else `WEST` equals 0
head(data_clean, 20)
head(data_clean[data_clean$SOUTH==1,], 20)
head(data_clean[data_clean$MIDWST==1,], 20)
# filter out NA observations for sector
data_clean <- data_clean %>%
filter(CLASSWKRD > 00)
# check for observations of "unpaid family worker"
count(data_clean[data_clean$CLASSWRKD==29,])
# check for observations of "unpaid family worker"
head(data_clean[data_clean$CLASSWRKD==29,])
# check for observations of "unpaid family worker"
nrow(data_clean[data_clean$CLASSWRKD==29,])
# check for observations of "unpaid family worker"
nrow(data_clean[data_clean$CLASSWRKD==29,],)
# check for observations of "unpaid family worker"
nrow(data_clean[data_clean$EDUCD==000,])
nrow(data_clean[data_clean$CLASSWRKD==29,])
nrow(data_clean[data_clean$CLASSWRKD==29])
nrow(data_clean[data_clean$CLASSWRKD==29,])
nrow(data_clean[data_clean$CLASSWRKD==13,])
nrow(data_clean[data_clean$CLASSWRKD==20,])
nrow(data_clean[data_clean$CLASSWKRD=20,])
nrow(data_clean[data_clean$CLASSWKRD==20,])
nrow(data_clean[data_clean$CLASSWKRD==29,])
# check for observations of "unpaid family worker"
nrow(data_clean[data_clean$CLASSWKRD==29,])
# create binary variable for public sector workers (=1)
data_clean <- data_clean %>%
mutate(
PUBLIC_SEC = ifelse(CLASSWKRD > 23 & CLASSWKRD < 29,       # if `CLASSWKRD` is > 23 and < 29,
1,                                         # then `PUBLIC_SEC` equals 1,
0))                                        # else `PUBLIC_SEC` equals 0
# filter out undeterminable (mixed) metro area observations
data_clean <- data_clean %>%
filter(METRO > 0)
# create binary variable for presence in metropolitan area (=1)
data_clean <- data_clean %>%
mutate(
METRO_ADJ = ifelse(METRO > 1,       # if `METRO` is > 1,
1,                  # then `METRO_ADJ` equals 1,
0))                 # else `METRO_ADJ` equals 0
# remove original metro variable so i don't confuse myself
data_clean <- data_clean %>%
select(-METRO)
nrow(data_clean)
nrow(data_clean[data_clean$YEAR==1980,])
nrow(data_clean$SEX==1[data_clean$YEAR==1980,])
nrow(data_clean %>% filter(SEX == 1 & YEAR==1990))
nrow(data_clean %>% filter(SEX == 1 & YEAR==1980))
nrow(data_clean %>% filter(SEX == 1 & YEAR==1990))
nrow(data_clean %>% filter(SEX == 1 & YEAR==2000))
nrow(data_clean %>% filter(SEX == 1 & YEAR==2010))
library(pacman)
p_load(tidyverse, stargazer, kableExtra, ipumsr, dplyr)
# load data via IPUMS instructions
ddi <- read_ipums_ddi("data/usa_00002.xml")
data <- read_ipums_micro(ddi)
library(pacman)
p_load(tidyverse, stargazer, kableExtra, ipumsr, dplyr)
# load data via IPUMS instructions
ddi <- read_ipums_ddi("data/usa_00002.xml")
data <- read_ipums_micro(ddi)
str(data)
str(data)
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
# only include observations of non-hispanic
data_clean <- data_clean %>%
filter(HISPAN == 0)
# only include observations of white and black
data_clean <- data_clean %>%
filter(RACE %in% c(1, 2))
# eliminate unknown occupations in OCC1990
data_clean <- data_clean %>%
filter(OCC1990 < 999)
# load crosswalk to convert occ1990 to two-digit scheme
crosswalk <- read.csv("occ_crosswalk.csv")
# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990) %>%
rename(OCC_2DIGIT = occ_2digit) %>%
rename(OCC1990_LABELS = occ1990_labels)
# join data frame by OCC1990 variable
data_clean <- left_join(data_clean, crosswalk)
# remove OCC1990 as it is no longer necessary
data_clean <- data_clean %>%
select(-OCC1990)
# filter out economically inactive people and NAs
data_clean <- data_clean %>%
filter(LABFORCE == 2)
# remove NA (999999) or Missing (999998) observations from INCWAGE
data_clean <- data_clean %>%
filter(INCWAGE < 999998)
# adjust wages for inflation -> set to 1999 dollars
# (2000 census already set to 1999 dollars)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,       # if `year` equals 1980,
INCWAGE*2.295,           # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%            # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,       # if `year` equals 1990,
INCWAGE*1.344,           # then `incwage_adj` equals incwage*1.344,
INCWAGE_ADJ)) %>%        # else `incwage_adj` stays the same
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,       # if `year` equals 2010,
INCWAGE*0.777,           # then `incwage_adj` equals incwage*0.777,
INCWAGE_ADJ))            # else `incwage_adj` stays the same
# remove observations of 0 from INCWAGE before removing top and bottom percentiles
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0)
# group by year, then filter out top and bottom 1% for each year
data_clean <- data_clean %>%
group_by(YEAR) %>%
filter(quantile(INCWAGE_ADJ, 0.99) > INCWAGE_ADJ) %>%
filter(quantile(INCWAGE_ADJ, 0.01) < INCWAGE_ADJ)
head(data_clean, 20)
max(data_clean$INCWAGE_ADJ, 20)
max(data_clean$INCWAGE_ADJ, 20)
head(data_clean$INCWAGE_ADJ, 20)
quantile(INCWAGE_ADJ, 0.99)
quantile(data_clean$INCWAGE_ADJ, 0.99)
View(ddi)
View(data)
View(data_clean)
View(data_clean)
View(data_clean)
# remove INCWAGE as it is no longer necessary (so i don't confuse myself)
data_clean <- data_clean %>%
select(-INCWAGE)
# remove INCWAGE as it is no longer necessary (so i don't confuse myself)
data_clean <- data_clean %>%
select(-INCWAGE)
# 1. create new variable of weekly wage by dividing annual wages by weeks worked
# 2. create new variable of log weekly wages
# 3. create new variable of log working hours
data_clean <- data_clean %>%
mutate(WKWAGE = INCWAGE_ADJ / WKSWORK2) %>%
mutate(WKWAGE_LOG = log(WKWAGE)) %>%
mutate(UHRSWORK_LOG = log(UHRSWORK))
# restrict age to 25 - 59
data_clean <- data_clean %>%
filter(AGE >= 25) %>%
filter(AGE <= 59)
# check the occurrences of NA + no schooling, NA, and no schooling in EDUCD variable
nrow(data_clean[data_clean$EDUCD==000,])         # NA + no schooling
nrow(data_clean[data_clean$EDUCD==001,])         # NA
nrow(data_clean[data_clean$EDUCD==002,])         # no schooling
head(data_clean[data_clean$EDUCD==000,], 20)
head(data_clean[data_clean$EDUCD==001,], 20)
# filter out missing observations and observations below grade 1
years_filtered <- c(011, 012, 999)
# pipe the filtering function
data_clean <- data_clean %>%
filter(!(EDUCD %in% years_filtered))
# create new variable for years of schooling (calculated directly)
# create new crosswalk for years of schooling
######### include GED? 064
######### for 065 i made it 12....? because thats the highest completed
######### HOW TO HANDLE 115???????????????? i JUAT MADE IT 19 FOR LAW DEGREE???????????
######### doctoral is 5 years + college
EDUCD <- c(002, 010, 013, 014, 015, 016, 017, 020, 021, 022, 023, 024, 025, 026, 030, 040, 050, 060, 061, 062, 063, 064, 065, 070, 071, 080, 081, 082, 083, 090, 100, 101, 110, 111, 112, 113, 114, 115, 116)
YRSSCH <- c(0, 1.16, 2.5, 1, 2, 3, 4, 6.5, 5.5, 5, 6, 7.5, 7, 8, 9, 10, 11, 12, 12, 12, 12, 12, 12, 13, 14.5, 14, 14, 14, 14, 15, 16, 16, 17, 18, 19, 20, 18, 19, 21)
crosswalk_yrssch <- cbind.data.frame(EDUCD, YRSSCH)
crosswalk_yrssch
head(data_clean, 20)
# crosswalk
data_clean <- left_join(data_clean, crosswalk_yrssch)
head(data_clean, 20)
# create binary categories for educational attainment
# college grad is the omitted category
data_clean <- data_clean %>%
mutate(
LESSHS = ifelse(EDUC < 06,       # if `EDUC` is less than 06 (grade 12),
1,               # then `LESSHS` equals 1,
0)) %>%         # else `LESSHS` equals 0
mutate(
HSGRAD = ifelse(EDUC == 06,       # if `EDUC` equals 06 (grade 12),
1,               # then `HSGRAD` equals 1,
0)) %>%         # else `HSGRAD` equals 0
mutate(
SOMECOL = ifelse(EDUC > 06 & EDUC < 10, # if `EDUC` is > 06 (grade 12) and < 10 (4 year col),
1,                       # then `SOMECOL` equals 1,
0))                  # else `SOMECOL` equals 0
# create new variable "potential work experience" (age - years schooling - 6), and its square
data_clean <- data_clean %>%
mutate(POTWORK = (AGE - YRSSCH - 6)) %>%
mutate(POTWORK_SQ = POTWORK^2)
test_1990 <- data_clean %>% filter(YEAR==1990)
head(test_1990)
# approx equal to  male pop
nrow(test_1990)
nrow(data_clean %>% filter(SEX==1 & YEAR==2010))
nrow(data_clean %>% filter(SEX==1 & YEAR==2010))
# should be...
275,239 + 33,215
# should be...
275239 + 33215
nrow(data_clean %>% filter(SEX==1 & YEAR==2010))
# should be...
275239 + 33215
nrow(data_clean %>% filter(SEX==1 & YEAR==1980))
nrow(data_clean %>% filter(SEX==1 & YEAR==1980))
# should be...
1246589 + 146484
nrow(data_clean %>% filter(SEX==1 & YEAR==1990))
nrow(data_clean %>% filter(SEX==1 & YEAR==1990))
# should be...
293404 + 29857
nrow(data_clean %>% filter(SEX==1 & YEAR==2000))
# should be...
1446271 + 171000
# create new variable for years of schooling
# create new crosswalk between EDUC / YRSSCH and recode unspecified years of schooling
# (ex "Grade 7 or 8" = 7.5, "Bachelor's degree" = 16, "8+" = 8)
######### include GED? 064
######### for 065 i made it 12....? because thats the highest completed
######### HOW TO HANDLE 115???????????????? I didn't include it???
######### doctoral is 5 years + college
EDUCD <- c(002, 010, 013, 014, 015, 016, 017, 020, 021, 022, 023, 024, 025, 026, 030, 040, 050, 060, 061, 062, 063, 064, 065, 070, 071, 080, 081, 082, 083, 090, 100, 101, 110, 111, 112, 113, 114, 116)
YRSSCH <- c(0, 1.16, 2.5, 1, 2, 3, 4, 6.5, 5.5, 5, 6, 7.5, 7, 8, 9, 10, 11, 12, 12, 12, 12, 12, 12, 13, 14.5, 14, 14, 14, 14, 15, 16, 16, 17, 18, 19, 20, 18, 21)
crosswalk_yrssch <- cbind.data.frame(EDUCD, YRSSCH)
crosswalk_yrssch
# crosswalk
data_clean <- left_join(data_clean, crosswalk_yrssch)
head(data_clean, 20)
nrow(data_clean %>% filter(SEX==1 & YEAR==1980))
# should be...
1246589 + 146484
nrow(data_clean %>% filter(SEX==1 & YEAR==1990))
# should be...
293404 + 29857
nrow(data_clean %>% filter(SEX==1 & YEAR==2000))
# should be...
1446271 + 171000
nrow(data_clean %>% filter(SEX==1 & YEAR==2010))
# should be...
275239 + 33215
p_load(tidyverse, foreign, corrplot, stargazer, coefplot, effects)
pop <- rgamma(3000, 5, rate = 4, scale = 1/4)
pop <- rgamma(3000, 5, rate = 4)
pop %>%
ggplot() +
geom_point(shape = 1, alpha = 0.7)
plot(pop)
error <- rnorm(0, 1)
data_gamma <- (-0.25) + 1.2pop + error
error <- rnorm(0, 1)
data_gamma <- (-0.25) + 1.2pop + error
data_gamma <- (-0.25) + 1.2*pop + error
plot(data_gamma)
y <- (-0.25) + 1.2*pop + error
data_gamma <- cbind.data.frame(pop, y)
set.seed(1234)
# simulate gamma distribution with n = 3000, shape of 5 and rate of 4
pop <- rgamma(3000, 5, rate = 4)
# simulate error term with mean = 0 and sd = 1
error <- rnorm(3000, 0, 1)
# calculate y
y <- (-0.25) + 1.2*pop + error
# create data frame
data_gamma <- cbind.data.frame(pop, y)
# plot
data_gamma %>%
ggplot(aes(x = pop, y = y)) +
geom_point(shape = 1, alpha = 0.7)
# show regression diagnostics
summary(lm(y ~ pop, data = data_gamma))
covid_data <- read.csv("covid.csv")
set.seed(1234) # set the same seed to ensure identical results
e = rnorm(n, 0, 0.5)
str(covid_data)
str(covid_data)
# set the same seed to ensure identical results
set.seed(1234)
# create error term
e = rnorm(n, 0, 0.5)
str(covid_data)
# find number of observations in data frame
str(covid_data)
# set the same seed to ensure identical results
set.seed(1234)
# create error term
e = rnorm(1000, 0, 0.5)
covid_data <- covid_data %>%
mutate(vaccine_cf = ifelse(vaccine == 1,
0,
1),
covid_risk_cf = rescale(0 - 7*vaccine_cf - 2*info + e, to = c(0, 100)))
p_load(tidyverse, scales, foreign, corrplot, stargazer, coefplot, effects)
# find number of observations in data frame
str(covid_data)
# set the same seed to ensure identical results
set.seed(1234)
# create error term
e = rnorm(1000, 0, 0.5)
covid_data <- covid_data %>%
mutate(vaccine_cf = ifelse(vaccine == 1,
0,
1),
covid_risk_cf = rescale(0 - 7*vaccine_cf - 2*info + e, to = c(0, 100)))
head(covid_data, 5)
mean(covid_data$covid_risk %>% filter(vaccine==1))
mean(covid_data$covid_risk[covid_data$vaccine==1))
mean(covid_data$covid_risk[covid_data$vaccine==1,))
covid_data %>%
filter(vaccine == 1) %>%
summarise(YT_D1 = mean(covid_risk))
# control group
covid_data %>%
filter(vaccine == 0) %>%
summarise(YT_D1 = mean(covid_risk))
# what if the treatment group were control (counterfactual)?
covid_data %>%
filter(vaccine_cf == 0) %>%
summarise(YT_D1 = mean(covid_risk_cf))
# what if the treatment group were control (counterfactual)?
covid_data %>%
filter(vaccine_cf == 0) %>%
summarise(YT_D0 = mean(covid_risk_cf))
# what if the control group were treated (counterfactual)?
covid_data %>%
filter(vaccine_cf == 0) %>%
summarise(YT_D0 = mean(covid_risk_cf))
# what if the control group were treated (counterfactual)?
covid_data %>%
filter(vaccine_cf == 1) %>%
summarise(YT_D0 = mean(covid_risk_cf))
41.8 - 67.3
# treatment group
covid_data %>%
filter(vaccine == 1) %>%
summarise(YT_D1 = mean(covid_risk))
YT_D1 <- covid_data %>%
filter(vaccine == 1) %>%
summarise(YT_D1 = mean(covid_risk))
# control group
YC_D0 <- covid_data %>%
filter(vaccine == 0) %>%
summarise(YC_D0 = mean(covid_risk))
# what if the treatment group were control (counterfactual)?
YC_D1 <- covid_data %>%
filter(vaccine_cf == 0) %>%
summarise(YC_D1 = mean(covid_risk_cf))
# what if the control group were treated (counterfactual)?
YT_D0 <- covid_data %>%
filter(vaccine_cf == 1) %>%
summarise(YT_D0 = mean(covid_risk_cf))
YT_D1 - YC_D0
YT_D1 - YC_D1
YT_D0 - YC_D0
YC_D1 - YC_D0
# load data
admin <- read.csv("admin.csv")
str(admin)
admin_lm <- lm(admit ~ gre + gpa + rank, data = admin)
stargazer(admin_lm)
```{r, results='asis'}
install.packages(pacman)
install.packages("pacman")
install.packages("pacman")
library(tidyverse, scales, stargazer)
p_load(tidyverse, scales, stargazer)
