# -------Simulate DV-------
# log_odds is the log odds of supporting same-sex marriage
# Log odds is a LINEAR FUNCTION of IVs
log_odds = 0.8*eduy + (-0.2)*age + 0.8*female
# Tranform log odds to probability using the logistic function
# which is the INVERSE FUNCTION of log odds
# p is the probability of supporting the same-sex marriage
p = exp(log_odds) / (1 + exp(log_odds))
# support is whether one supports same-sex marriage
# the value is generated according to one's probability p
set.seed(123)
support <- rbinom(1000, 1, p)
# You can see how log odds, probability, and the final Y
# are mapped to each other through plots
par(mfrow = c(1, 2))
plot(x = log_odds, y = p)
plot(x = p,  y = support)
# Create dataframe
support_df <- tibble(
support = support,
eduy = eduy,
age = age,
female = female,
black = black
)
head(support_df, 10) %>% kbl("html") %>% kable_classic_2(full_width = F)
support_df %>%
ggplot() +
geom_boxplot(aes(x = as.factor(support), y = age))
support_df %>%
group_by(support) %>%
summarise(
mean_eduy = mean(eduy),
mean_age = mean(age),
perc_female = mean(female),
perc_black = mean(black)
) %>%
t() %>%
as.data.frame() %>%
kbl("html") %>%
kable_classic_2(full_width = F)
m1 <- lm(support ~ eduy, support_df)
m2 <- lm(support ~ eduy + age, support_df)
m3 <- lm(support ~ eduy + age + female, support_df)
m4 <- lm(support ~ eduy + age + female + black, support_df)
stargazer(m1, m2, m3, m4, type="text", omit.stat = c("f"))
support_df %>%
ggplot(aes(x = eduy, y = support)) +
geom_point(shape = 1,
position = position_jitter(width = 1, height = 0.03)) +
geom_smooth(method = "lm")
# Estimate Logistic Regression
logit1 <- glm(support ~ eduy, support_df, family = binomial(link="logit"))
logit2 <- glm(support ~ eduy + age, support_df, family = binomial(link="logit"))
logit3 <- glm(support ~ eduy + age + female, support_df, family = binomial(link="logit"))
logit4 <- glm(support ~ eduy + age + female + black, support_df, family = binomial(link="logit"))
stargazer(logit1, logit2, logit3, logit4,
type="text",
omit.stat = c("f"))
plot(x = log_odds, y = p)
# Find odds ratio of logit4
exp(coef(logit4))
# from olu
#library(pacman)
#p_load(tidyverse, stargazer, kableExtra, ipumsr, dplyr)
library(tidyverse)
library(kableExtra)
library(ipumsr)
# load data via IPUMS instructions
ddi <- read_ipums_ddi("data/usa_00002.xml")
data <- read_ipums_micro(ddi)
str(data)
crosswalk <- read.csv("data/occ_crosswalk.csv")
crosswalk <- read.csv("occ_crosswalk.csv")
head(crosswalk, 10)
summary(crosswalk)
view(crosswalk)
str(crosswalk)
head(data_clean)
# rename
crosswalk <- crosswalk %>%
rename(occ1990 = OCC1990)
# rename
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990)
## match names between the two data frames! otherwise it won't work
left_join(data_clean, crosswalk)
## match names between the two data frames! otherwise it won't work
data_clean_test <- left_join(data_clean, crosswalk)
head(data_clean_test)
head(data_clean_test, 20)
crosswalk <- read.csv("occ_crosswalk.csv")
# rename to make variables match in both dataframes
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990)
## match names between the two data frames! otherwise it won't work
data_clean <- left_join(data_clean, crosswalk)
## match names between the two data frames! otherwise it won't work
data_clean <- left_join(data_clean, crosswalk)
## match names between the two data frames! otherwise it won't work
data_clean <- left_join(data_clean, crosswalk)
# from olu
#library(pacman)
#p_load(tidyverse, stargazer, kableExtra, ipumsr, dplyr)
library(tidyverse)
library(kableExtra)
library(ipumsr)
# load data via IPUMS instructions
ddi <- read_ipums_ddi("data/usa_00002.xml")
data <- read_ipums_micro(ddi)
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
# only include observations of non-hispanic
data_clean <- data_clean %>%
filter(HISPAN == 0)
# only include observations of white and black
data_clean <- data_clean %>%
filter(RACE %in% c(1, 2))
crosswalk <- read.csv("occ_crosswalk.csv")
# rename to make variables match in both dataframes
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990)
## match names between the two data frames! otherwise it won't work
data_clean <- left_join(data_clean, crosswalk)
head(data_clean)
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
# only include observations of non-hispanic
data_clean <- data_clean %>%
filter(HISPAN == 0)
# only include observations of white and black
data_clean <- data_clean %>%
filter(RACE %in% c(1, 2))
# load crosswalk to convert occ1990 to two-digit scheme
crosswalk <- read.csv("occ_crosswalk.csv")
# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990) %>%
rename(OCC_2DIGIT = occ_2digit) %>%
rename(OCC1990_LABELS = occ1990_labels)
# join data frame by OCC1990 variable
data_clean <- left_join(data_clean, crosswalk)
summary(data_clean)
str(data_clean)
# adjust wages for inflation. set to 1999 dollars.
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,     # if `age` equals 9999,
INCWAGE*2.295,                  # then let `age_recode` equals NA,
INCWAGE))
head(data_clean, 10)
head(data_clean$INCWAGE, data_clean$INCWAGE_ADJ, 10)
head(data_clean$INCWAGE, 10)
head(data_clean$INCWAGE, 10)
head(data_clean$INCWAGE_ADJ, 10)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,     # if `year` equals 1980,
INCWAGE*2.295,        # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%          # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,     # if `year` equals 1990,
INCWAGE*1.344,        # then `incwage_adj` equals incwage*1.344,
INCWAGE)) %>%          # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,     # if `year` equals 1980,
INCWAGE*0.777,        # then `incwage_adj` equals incwage*2.295,
INCWAGE))          # else `incwage_adj` equals 'incwage'
head(data_clean[data_clean$YEAR==1990,],10)
library(pacman)
p_load(tidyverse, stargazer, kableExtra, ipumsr, dplyr)
head(data_clean[data_clean$YEAR==1990,],10)
head(data_clean$INCWAGE[data_clean$YEAR==1990,],10)
head(data_clean[data_clean$YEAR==1990,],10)
head(data_clean[data_clean$YEAR==1980,],10)
head(data_clean[data_clean$YEAR==1980,],10)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,     # if `year` equals 1980,
INCWAGE*2.295,        # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%          # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,     # if `year` equals 1990,
INCWAGE*1.344,        # then `incwage_adj` equals incwage*1.344,
INCWAGE)) %>%          # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,     # if `year` equals 1980,
INCWAGE*0.777,        # then `incwage_adj` equals incwage*2.295,
INCWAGE))          # else `incwage_adj` equals 'incwage'
head(data_clean[data_clean$YEAR==1980,],10)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,     # if `year` equals 1980,
INCWAGE*2.295,        # then `incwage_adj` equals incwage*2.295,
INCWAGE))            # else `incwage_adj` equals 'incwage'
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,     # if `year` equals 1990,
INCWAGE*1.344,        # then `incwage_adj` equals incwage*1.344,
INCWAGE))            # else `incwage_adj` equals 'incwage'
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,     # if `year` equals 1980,
INCWAGE*0.777,        # then `incwage_adj` equals incwage*2.295,
INCWAGE))            # else `incwage_adj` equals 'incwage'
head(data_clean[data_clean$YEAR==1980,],10)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,     # if `year` equals 1980,
INCWAGE*2.295,        # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%           # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,     # if `year` equals 1990,
INCWAGE*1.344,        # then `incwage_adj` equals incwage*1.344,
INCWAGE_ADJ)) %>%           # else `incwage_adj` stays the same
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,     # if `year` equals 1980,
INCWAGE*0.777,        # then `incwage_adj` equals incwage*2.295,
INCWAGE_ADJ))            # else `incwage_adj` stays the same
head(data_clean[data_clean$YEAR==1980,],10)
head(data_clean[data_clean$YEAR==1990,],10)
head(data_clean[data_clean$YEAR==2000,],10)
head(data_clean[data_clean$YEAR==2010,],10)
# remove INCWAGE as it is no longer necessary
data_clean <- data_clean %>%
select(-INCWAGE)
head(data_clean, 10)
# remove OCC1990 as it is no longer necessary
data_clean <- data_clean %>%
select(-OCC1990)
head(data_clean, 10)
data_clean <- data_clean %>%
mutate(WKWAGE = INCWAGE_ADJ / WKSWORK2) %>%
mutate(WKWAGE_LOG = log(WKWAGE)) %>%
mutate(UHRSWORK_LOG = log(UHRSWORK))
head(data_clean, 10)
head(data_clean, 10)
quantile(data_clean, c(.1, .99))
summary(data$INCWAGE)
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
# only include observations of non-hispanic
data_clean <- data_clean %>%
filter(HISPAN == 0)
# only include observations of white and black
data_clean <- data_clean %>%
filter(RACE %in% c(1, 2))
# load crosswalk to convert occ1990 to two-digit scheme
crosswalk <- read.csv("occ_crosswalk.csv")
# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990) %>%
rename(OCC_2DIGIT = occ_2digit) %>%
rename(OCC1990_LABELS = occ1990_labels)
# join data frame by OCC1990 variable
data_clean <- left_join(data_clean, crosswalk)
# remove OCC1990 as it is no longer necessary
data_clean <- data_clean %>%
select(-OCC1990)
data_clean <- data_clean %>%
filter(INCWAGE < 999998)
# eliminate top and bottom earning percentiles
######### i do this first right???
quantile(data_clean$INCWAGE, c(.1, .99))
# adjust wages for inflation -> set to 1999 dollars
# (2000 census already set to 1999 dollars)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,       # if `year` equals 1980,
INCWAGE*2.295,           # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%            # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,       # if `year` equals 1990,
INCWAGE*1.344,           # then `incwage_adj` equals incwage*1.344,
INCWAGE_ADJ)) %>%        # else `incwage_adj` stays the same
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,       # if `year` equals 2010,
INCWAGE*0.777,           # then `incwage_adj` equals incwage*0.777,
INCWAGE_ADJ))            # else `incwage_adj` stays the same
# eliminate top and bottom earning percentiles
######### is this the right place for this step???
quantile(data_clean$INCWAGE, c(.1, .99))
# eliminate top and bottom earning percentiles
######### is this the right place for this step???
quantile(data_clean$INCWAGE, c(.01, .99))
# eliminate top and bottom earning percentiles
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
quantile(data_clean$INCWAGE_ADJ, c(.05, .99))
quantile(data_clean$INCWAGE_ADJ, c(.2, .99))
quantile(data_clean$INCWAGE_ADJ, c(.3, .99))
quantile(data_clean$INCWAGE_ADJ, c(.4, .99))
# eliminate top and bottom earning percentiles
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
# eliminate top and bottom earning percentiles
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0 && INCWAGE_ADJ < 121000)
# determine top and bottom 1% of earnings after adjusting for inflation
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
# only include observations of non-hispanic
data_clean <- data_clean %>%
filter(HISPAN == 0)
# only include observations of white and black
data_clean <- data_clean %>%
filter(RACE %in% c(1, 2))
# eliminate unknown occupations in OCC1990
data_clean <- data_clean %>%
filter(OCC1990 < 999)
# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990) %>%
rename(OCC_2DIGIT = occ_2digit) %>%
rename(OCC1990_LABELS = occ1990_labels)
# load crosswalk to convert occ1990 to two-digit scheme
crosswalk <- read.csv("occ_crosswalk.csv")
# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990) %>%
rename(OCC_2DIGIT = occ_2digit) %>%
rename(OCC1990_LABELS = occ1990_labels)
# join data frame by OCC1990 variable
data_clean <- left_join(data_clean, crosswalk)
# remove OCC1990 as it is no longer necessary
data_clean <- data_clean %>%
select(-OCC1990)
# remove NA (999999) or Missing (999998) observations from INCWAGE
######### i do this first right???
data_clean <- data_clean %>%
filter(INCWAGE < 999998)
# adjust wages for inflation -> set to 1999 dollars
# (2000 census already set to 1999 dollars)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,       # if `year` equals 1980,
INCWAGE*2.295,           # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%            # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,       # if `year` equals 1990,
INCWAGE*1.344,           # then `incwage_adj` equals incwage*1.344,
INCWAGE_ADJ)) %>%        # else `incwage_adj` stays the same
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,       # if `year` equals 2010,
INCWAGE*0.777,           # then `incwage_adj` equals incwage*0.777,
INCWAGE_ADJ))            # else `incwage_adj` stays the same
# determine top and bottom 1% of earnings after adjusting for inflation
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
# eliminate top and bottom earning percentiles
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0 && INCWAGE_ADJ < 121000)
# remove INCWAGE as it is no longer necessary
data_clean <- data_clean %>%
select(-INCWAGE)
###### choose only economically active people, restrict age to 25 - 59
data_clean <- data_clean %>%
filter(LABFORCE == 2)
# restrict age to 25 - 59
data_clean <- data_clean %>%
filter(AGE >= 25 && INCWAGE_ADJ <= 59)
head(data_clean)
head(data_clean, 10)
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
# only include observations of non-hispanic
data_clean <- data_clean %>%
filter(HISPAN == 0)
# only include observations of white and black
data_clean <- data_clean %>%
filter(RACE %in% c(1, 2))
# eliminate unknown occupations in OCC1990
data_clean <- data_clean %>%
filter(OCC1990 < 999)
# load crosswalk to convert occ1990 to two-digit scheme
crosswalk <- read.csv("occ_crosswalk.csv")
# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990) %>%
rename(OCC_2DIGIT = occ_2digit) %>%
rename(OCC1990_LABELS = occ1990_labels)
# join data frame by OCC1990 variable
data_clean <- left_join(data_clean, crosswalk)
# remove OCC1990 as it is no longer necessary
data_clean <- data_clean %>%
select(-OCC1990)
# remove NA (999999) or Missing (999998) observations from INCWAGE
######### i do this first right???
data_clean <- data_clean %>%
filter(INCWAGE < 999998)
# adjust wages for inflation -> set to 1999 dollars
# (2000 census already set to 1999 dollars)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,       # if `year` equals 1980,
INCWAGE*2.295,           # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%            # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,       # if `year` equals 1990,
INCWAGE*1.344,           # then `incwage_adj` equals incwage*1.344,
INCWAGE_ADJ)) %>%        # else `incwage_adj` stays the same
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,       # if `year` equals 2010,
INCWAGE*0.777,           # then `incwage_adj` equals incwage*0.777,
INCWAGE_ADJ))            # else `incwage_adj` stays the same
# determine top and bottom 1% of earnings (after adjusting for inflation)
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
# eliminate top and bottom earning percentiles (after adjusting for inflation)
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0 && INCWAGE_ADJ < 121000)
head(data_clean, 10)
summary(data_clean$INCWAGE_ADJ)
# eliminate top and bottom earning percentiles (after adjusting for inflation)
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0 && INCWAGE_ADJ < 121000)
summary(data_clean$INCWAGE_ADJ)
# eliminate top and bottom earning percentiles (after adjusting for inflation)
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0) %>%
filter(INCWAGE_ADJ < 121000)
summary(data_clean$INCWAGE_ADJ)
# remove detailed hispanic and race columns as filtering can be done using the basic columns
data_clean <- data %>%
select(-HISPAND, -RACED)
# only include observations of non-hispanic
data_clean <- data_clean %>%
filter(HISPAN == 0)
# only include observations of white and black
data_clean <- data_clean %>%
filter(RACE %in% c(1, 2))
# eliminate unknown occupations in OCC1990
data_clean <- data_clean %>%
filter(OCC1990 < 999)
# load crosswalk to convert occ1990 to two-digit scheme
crosswalk <- read.csv("occ_crosswalk.csv")
# rename to make variables match in both data frames
crosswalk <- crosswalk %>%
rename(OCC1990 = occ1990) %>%
rename(OCC_2DIGIT = occ_2digit) %>%
rename(OCC1990_LABELS = occ1990_labels)
# join data frame by OCC1990 variable
data_clean <- left_join(data_clean, crosswalk)
# remove OCC1990 as it is no longer necessary
data_clean <- data_clean %>%
select(-OCC1990)
# filter out economically inactive people and NAs
####### is this the right spot for this??
data_clean <- data_clean %>%
filter(LABFORCE == 2)
# remove NA (999999) or Missing (999998) observations from INCWAGE
######### i do this first right???
data_clean <- data_clean %>%
filter(INCWAGE < 999998)
# adjust wages for inflation -> set to 1999 dollars
# (2000 census already set to 1999 dollars)
data_clean <- data_clean %>%
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1980,       # if `year` equals 1980,
INCWAGE*2.295,           # then `incwage_adj` equals incwage*2.295,
INCWAGE)) %>%            # else `incwage_adj` equals 'incwage'
mutate(
INCWAGE_ADJ = ifelse(YEAR == 1990,       # if `year` equals 1990,
INCWAGE*1.344,           # then `incwage_adj` equals incwage*1.344,
INCWAGE_ADJ)) %>%        # else `incwage_adj` stays the same
mutate(
INCWAGE_ADJ = ifelse(YEAR == 2010,       # if `year` equals 2010,
INCWAGE*0.777,           # then `incwage_adj` equals incwage*0.777,
INCWAGE_ADJ))            # else `incwage_adj` stays the same
# determine top and bottom 1% of earnings (after adjusting for inflation)
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.01, .99))
# eliminate top and bottom earning percentiles (after adjusting for inflation)
#### is this correct????
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0) %>%
filter(INCWAGE_ADJ < 150000)
summary(data_clean$INCWAGE_ADJ)
# determine top and bottom 1% of earnings (after adjusting for inflation)
######### is this the right place for this step???
quantile(data_clean$INCWAGE_ADJ, c(.02, .99))
# eliminate top and bottom earning percentiles (after adjusting for inflation)
#### is this correct????
data_clean <- data_clean %>%
filter(INCWAGE_ADJ > 0) %>%
filter(INCWAGE_ADJ < 150000)
######### remove INCWAGE as it is no longer necessary (????? so i don't confuse myself)
data_clean <- data_clean %>%
select(-INCWAGE)
# restrict age to 25 - 59
data_clean <- data_clean %>%
filter(AGE >= 25) %>%
filter(AGE <= 59)
summary(data_clean$AGE)
head(data_clean, 10)
# 1. create new variable of weekly wage by dividing annual wages by weeks worked
# 2. create new variable of log weekly wages
# 3. create new variable of log working hours
data_clean <- data_clean %>%
mutate(WKWAGE = INCWAGE_ADJ / WKSWORK2) %>%
mutate(WKWAGE_LOG = log(WKWAGE)) %>%
mutate(UHRSWORK_LOG = log(UHRSWORK))
str(data_clean)
